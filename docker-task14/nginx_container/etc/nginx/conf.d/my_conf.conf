##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

log_format  proxy_log  '[$time_local] $remote_addr - $remote_user "$http_host$request_uri" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$proxy_add_x_forwarded_for"'
                      ' Proxy: "$proxy_host" "$upstream_addr"';

access_log /var/log/nginx/proxy_log.log proxy_log;

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
server {
    if ($host = nlulootask4.gleeze.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name nlulootask4.gleeze.com;
    return 404; # managed by Certbot


}


server {
	
	server_name nlulootask4.gleeze.com;

	root /var/www/task4/;
	index index.html index.htm index.nginx-debian.html;


		location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/nlulootask4.gleeze.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/nlulootask4.gleeze.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot




	location /other {
		proxy_pass http://127.0.0.1:8000/;

                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

	}

	location /secondpage{
		proxy_pass http://127.0.0.1:8081/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /secondserver{
		return 301 https://google.com;
	}

	location ~* \.png$ {
	        alias /var/www/task4/resources;
	 	try_files $uri =404;
	}

	location ~* \.jpg$ {
	    alias /var/www/task4/resources;
	    try_files $uri =404;
	    image_filter rotate 180;             
	}

	location /image1 {
	    rewrite ^/image1$ /image1.jpg break;
	    root /var/www/task4/resources;
	    image_filter rotate 180;
	}

	location /image2 {
	    rewrite ^/image2$ /image2.png break;
	    root /var/www/task4/resources;
	    try_files $uri =404;
	}


	location /music {
	    alias /var/www/music/;
	    add_header Content-Disposition 'attachment; filename="song.mp3"';    
	    add_header Content-type aplication/octet-stream;
	    try_files /song.mp3 =404;
	}

	location /error {
	return 500;
	}
}

server {
	listen 8000;
	root /var/www/html/other_page/;
	index index.html index.htm index.nginx-debian.html;

	location /{
	try_files $uri $uri/ =404;
	}
}
